name: Build and deploy
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set platform as php 8.3 for dependencies
      run: composer config platform.php 8.3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest --no-dev --optimize-autoloader

    - name: Publish vendor assets
      run: php artisan horizon:publish
      
    - name: Cache NPM packages
      id: npm-cache
      uses: actions/cache@v4
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
      
    - name: Install NPM dependencies
      run: npm ci

    - name: Build frontend assets with Vite
      run: npm run build
      
    - name: rsync deployment
      uses: burnett01/rsync-deployments@6.0
      with:
        switches: -avzr --delete --exclude=".env" --exclude="node_modules/" --exclude="storage/" --exclude="bootstrap/cache/" --exclude=".git"
        path: /
        remote_path: /var/www/ping/
        remote_host: nicolus.fr
        remote_user: ubuntu
        remote_key: ${{ secrets.DEPLOY_KEY }}

    - name: executing remote ssh commands
      uses: appleboy/ssh-action@master
      with:
        host: nicolus.fr
        username: ubuntu
        key: ${{ secrets.DEPLOY_KEY }}
        port: 22
        script: |
          cd /var/www/ping
          php artisan optimize
          php artisan storage:link
          php artisan horizon:terminate
      
    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
